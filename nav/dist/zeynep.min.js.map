{"version":3,"sources":["zeynep.js"],"names":["$","pluginName","defaults","htmlClass","Plugin","element","options","this","eventController","extend","initialized","init","prototype","zeynep","find","on","event","preventDefault","subMenuId","attr","subMenuEl","length","removeClass","addClass","hasClass","scrollTop","open","close","disableEvent","destroy","removeData","name","handler","eventBinder","call","type","Error","fn","instance","data","window","jQuery"],"mappings":";;;;;;CAAA,SAAAA,EAAAC,GAEA,IAAAC,EAAA,CACAC,WAAA,GAFA,SAAAC,EAAAC,EAAAC,GACAC,KAAAF,QAAAA,EACAE,KAAAC,gBAAAA,EAGAD,KAAAD,QAAAN,EAAAS,OAAA,GAAAP,EAAAI,GACAC,KAAAD,QAAAI,aAAA,EAGAH,KAAAI,OAGAP,EAAAQ,UAAAD,KAAA,WACA,IAAAE,EAAAN,KAAAF,QACAC,EAAAC,KAAAD,SAGA,IAAAA,EAAAI,cAGAH,KAAAC,gBAAA,WAGAK,EAAAC,KAAA,kBAAAC,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBAEA,IACAC,EADAlB,EAAAO,MACAY,KAAA,gBACAC,EAAApB,EAAA,IAAAkB,GAGAE,EAAAC,SAGAR,EAAAC,KAAA,oBAAAQ,YAAA,WACAF,EAAAG,SAAA,kBACAV,EAAAW,SAAA,mBAAAX,EAAAU,SAAA,qBAIAV,EAAAC,KAAA,wBAAAC,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBAEA,IACAC,EADAlB,EAAAO,MACAY,KAAA,sBACAC,EAAApB,EAAA,IAAAkB,GAGAE,EAAAC,SAGAD,EAAAE,YAAA,kBACAT,EAAAC,KAAA,wBAAAS,SAAA,WACAV,EAAAC,KAAA,mBAAAO,QAAAR,EAAAS,YAAA,kBAEAF,EAAAK,UAAA,MAIAlB,KAAAC,gBAAA,QAGAD,KAAAD,QAAAH,YAAAH,EAAA,QAAAwB,SAAA,uBAAAxB,EAAA,QAAAuB,SAAA,sBAEAjB,EAAAI,aAAA,IAGAN,EAAAQ,UAAAc,KAAA,WAEAnB,KAAAC,gBAAA,WAGAD,KAAAF,QAAAkB,SAAA,UACAhB,KAAAD,QAAAH,WAAAH,EAAA,QAAAuB,SAAA,iBAGAhB,KAAAC,gBAAA,WAGAJ,EAAAQ,UAAAe,MAAA,SAAAC,GAEAA,GAAArB,KAAAC,gBAAA,WAGAD,KAAAF,QAAAiB,YAAA,UACAf,KAAAD,QAAAH,WAAAH,EAAA,QAAAsB,YAAA,iBAGAM,GAAArB,KAAAC,gBAAA,WAGAJ,EAAAQ,UAAAiB,QAAA,WAEAtB,KAAAC,gBAAA,cAGAD,KAAAoB,OAAA,GAGApB,KAAAF,QAAAS,KAAA,mBAAAQ,YAAA,UAGAf,KAAAF,QAAAyB,WAAA7B,GAGAM,KAAAC,gBAAA,aAGAD,KAAAD,QAAAJ,EAEAK,KAAAD,QAAAH,WAAAH,EAAA,QAAAsB,YAAA,6BAEAf,KAAAF,eACAE,KAAAD,eACAC,KAAAC,iBAGAJ,EAAAQ,UAAAG,GAAA,SAAAgB,EAAAC,GACAC,EAAAC,KAAA3B,KAAAwB,EAAAC,IAIA,IAAAxB,EAAA,SAAA2B,GAEA,GAAA5B,KAAAD,QAAA6B,GAAA,CACA,GAAA,mBAAA5B,KAAAD,QAAA6B,GAAA,MAAAC,MAAA,qCAAAD,GAGA5B,KAAAD,QAAA6B,GAAAD,KAAA3B,KAAAA,KAAAF,QAAAE,KAAAD,WAuBA2B,EAAA,SAAAF,EAAAC,GAEA,GAAA,iBAAAD,EAAA,MAAAK,MAAA,yDAAAL,GACA,GAAA,mBAAAC,EAAA,MAAAI,MAAA,wCAAAL,GAGAxB,KAAAD,QAAAyB,GAAAC,GAKAhC,EAAAqC,GAAApC,GAAA,SAAAK,GAEA,IAhCAD,EAAAC,EACAgC,EAkCA,OAnCAjC,EAgCAL,EAAAO,KAAA,IAhCAD,EAgCAA,EA/BAgC,EAAA,KAEAjC,EAAAkC,KAAAtC,GASAqC,EAAAjC,EAAAkC,KAAAtC,IANAqC,EAAA,IAAAlC,EAAAC,EAAAC,GAAA,IAGAD,EAAAkC,KAAAtC,EAAAqC,IAMAA,GApJA,CA0KAE,OAAAC,OAAA","file":"zeynep.min.js","sourcesContent":["(function ($, pluginName) {\r\n  // plugin defaults\r\n  var defaults = {\r\n    htmlClass: true\r\n  }\r\n\r\n  // plugin constructor\r\n  function Plugin (element, options) {\r\n    this.element = element\r\n    this.eventController = eventController\r\n\r\n    // merge defaults with options\r\n    this.options = $.extend({}, defaults, options)\r\n    this.options.initialized = false\r\n\r\n    // initialize the plugin\r\n    this.init()\r\n  }\r\n\r\n  Plugin.prototype.init = function () {\r\n    var zeynep = this.element\r\n    var options = this.options\r\n\r\n    // exit if already initialized\r\n    if (options.initialized === true) return\r\n\r\n    // loading event\r\n    this.eventController('loading')\r\n\r\n    // handle subMenu links/triggers click events\r\n    zeynep.find('[data-submenu]').on('click', function (event) {\r\n      event.preventDefault()\r\n\r\n      var self = $(this)\r\n      var subMenuId = self.attr('data-submenu')\r\n      var subMenuEl = $('#' + subMenuId)\r\n\r\n      // if subMenu not found, do nothing\r\n      if (!subMenuEl.length) return\r\n\r\n      // open subMenu\r\n      zeynep.find('.submenu.current').removeClass('current')\r\n      subMenuEl.addClass('opened current')\r\n      !zeynep.hasClass('submenu-opened') && zeynep.addClass('submenu-opened')\r\n    })\r\n\r\n    // handle subMenu closers click events\r\n    zeynep.find('[data-submenu-close]').on('click', function (event) {\r\n      event.preventDefault()\r\n\r\n      var self = $(this)\r\n      var subMenuId = self.attr('data-submenu-close')\r\n      var subMenuEl = $('#' + subMenuId)\r\n\r\n      // if subMenu not found, do nothing\r\n      if (!subMenuEl.length) return\r\n\r\n      // close subMenu\r\n      subMenuEl.removeClass('opened current')\r\n      zeynep.find('.submenu.opened:last').addClass('current')\r\n      !zeynep.find('.submenu.opened').length && zeynep.removeClass('submenu-opened')\r\n\r\n      subMenuEl.scrollTop(0)\r\n    })\r\n\r\n    // onLoad event\r\n    this.eventController('load')\r\n\r\n    // zeynepjs successfully initialized\r\n    this.options.htmlClass && !$('html').hasClass('zeynep-initialized') && $('html').addClass('zeynep-initialized')\r\n\r\n    options.initialized = true\r\n  }\r\n\r\n  Plugin.prototype.open = function () {\r\n    // opening event\r\n    this.eventController('opening')\r\n\r\n    // zeynepjs menu is opened\r\n    this.element.addClass('opened')\r\n    this.options.htmlClass && $('html').addClass('zeynep-opened')\r\n\r\n    // opened event\r\n    this.eventController('opened')\r\n  }\r\n\r\n  Plugin.prototype.close = function (disableEvent) {\r\n    // closing event\r\n    !disableEvent && this.eventController('closing')\r\n\r\n    // zeynepjs menu is opened\r\n    this.element.removeClass('opened')\r\n    this.options.htmlClass && $('html').removeClass('zeynep-opened')\r\n\r\n    // closed event\r\n    !disableEvent && this.eventController('closed')\r\n  }\r\n\r\n  Plugin.prototype.destroy = function () {\r\n    // destroying event\r\n    this.eventController('destroying')\r\n\r\n    // close the menu\r\n    this.close(true)\r\n\r\n    // close submenus\r\n    this.element.find('.submenu.opened').removeClass('opened')\r\n\r\n    // clear/remove the instance on the element\r\n    this.element.removeData(pluginName)\r\n\r\n    // destroyed event\r\n    this.eventController('destroyed')\r\n\r\n    // reset options\r\n    this.options = defaults\r\n\r\n    this.options.htmlClass && $('html').removeClass('zeynep-initialized')\r\n\r\n    delete this.element\r\n    delete this.options\r\n    delete this.eventController\r\n  }\r\n\r\n  Plugin.prototype.on = function (name, handler) {\r\n    eventBinder.call(this, name, handler)\r\n  }\r\n\r\n  // event executor\r\n  var eventController = function (type) {\r\n    // validations\r\n    if (!this.options[type]) return\r\n    if (typeof this.options[type] !== 'function') throw Error('event handler must be a function: ' + type)\r\n\r\n    // call the event\r\n    this.options[type].call(this, this.element, this.options)\r\n  }\r\n\r\n  // get the element instance\r\n  var getInstance = function (element, options) {\r\n    var instance = null\r\n\r\n    if (!element.data(pluginName)) {\r\n      // zeynepjs is not initialized for the element\r\n      // crceate a new instance\r\n      instance = new Plugin(element, options || {})\r\n\r\n      // put the instance on element\r\n      element.data(pluginName, instance)\r\n    } else {\r\n      // return the already initialized instance\r\n      instance = element.data(pluginName)\r\n    }\r\n\r\n    return instance\r\n  }\r\n\r\n  // dynamically event binder\r\n  var eventBinder = function (name, handler) {\r\n    // validations\r\n    if (typeof name !== 'string') throw Error('event name is expected to be a string but got: ' + typeof name)\r\n    if (typeof handler !== 'function') throw Error('event handler is not a function for: ' + name)\r\n\r\n    // update options\r\n    this.options[name] = handler\r\n  }\r\n\r\n  // a really lightweight plugin wrapper around the constructor\r\n  // preventing against multiple instantiations\r\n  $.fn[pluginName] = function (options) {\r\n    // get a zeynepjs instance\r\n    var instance = getInstance($(this[0]), options)\r\n\r\n    // return the instance\r\n    return instance\r\n  }\r\n})(window.jQuery, 'zeynep')\r\n"]}